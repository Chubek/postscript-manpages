.\" This file has been generated by `ps-mkmanpage.pl`
.TH eexec 3ps "" "2024-05-02" "PostScript Operator Manual"


.SH POSTFIX SIGNATURE
file eexec

.SH DESCRIPTION
string eexec - causes the contents of file (open for reading) or string to be  decrypted and then executed in a manner similar to the exec  operator. The decryption operation does not cause the file or  string to be modified. eexec creates a new file object that serves as a decryption  filter on the specified file or string. It pushes the new file  object on the execution stack, making it the current file for the  PostScript interpreter. Subsequently, each time the interpreter  reads a character from this file, or a program reads explicitly  from currentfile, the decryption filter reads one character from  the original file or string and decrypts it. The decryption filter file is closed automatically when the end  of the original file or string is encountered. It may also be  closed explicitly by closefile . If the file passed to eexec was currentfile , this resumes  direct execution of that file with the decryption filter removed.  The file may consist of encrypted text followed by unencrypted  text if the last thing executed in the encrypted text is  currentfile closefile. Before beginning execution, eexec pushes systemdict on the dictionary  stack. This ensures that the operators executed by the encrypted  program have their standard meanings. When the decryption filter  file is closed either explicitly or implicitly, the dictionary  stack is popped. The program must be aware that it is being  executed with systemdict as  the current dictionary; in particular, any definitions that it  makes must be into a specific dictionary rather than the current  one, since systemdict is  read-only. The encrypted file may be represented in either binary or hex;  the eexec operator can decrypt it without being told which type  it is. The recommended representation is hex, because hex data  can be transmitted through communication channels that are not  completely transparent. Regardless of the representation of the  encrypted file, the encryption and decryption processes are  transparent. That is, an arbitrary binary file can be encrypted,  transmitted as either binary or hex, and decrypted to yield the original information. The encryption employed by eexec is intended primarily for use in  Type 1 font programs. The book Adobe Type 1 Font Format contains  a complete description of the encryption algorithm and  recommended uses of eexec. 

.SH EXAMPLE
(NONE)
.SH ERRORS
.B  dictstackoverflow(3ps)
.B  invalidaccess(3ps)
.B  invalidfileaccess(3ps)
.B  limitcheck(3ps)
.B  stackunderflow(3ps)
.B  typecheck(3ps)

.SH SEE ALSO
.B  exec(3ps)
.B  filter(3ps)

