.\" This file has been generated by `ps-mkmanpage.pl`
.TH dict 3ps "" "2024-05-02" "PostScript Operator Manual"


.SH POSTFIX SIGNATURE
int dict dict

.SH DESCRIPTION
creates an empty dictionary with an initial capacity of int  elements and pushes the created dictionary object on the operand  stack. int is expected to be a nonnegative integer. The  dictionary is allocated in local or global VM according to the VM  allocation mode. In Level 1 implementations, the resulting dictionary has a  maximum capacity of int elements. Attempting to exceed that limit  causes a dictfull error. In Level 2 implementations, the int operand specifies only the  initial capacity; the dictionary can grow beyond that capacity if  necessary. The dict operator immediately consumes sufficient VM  to hold int key-value pairs. If more than that number of entries  are subsequently stored in the dictionary, additional VM is  consumed at that time. There is a cost associated with expanding a dictionary beyond its  initial allocation. For efficiency reasons, a dictionary is  expanded in chunks rather than one element at a time, so it may  contain a substantial amount of unused space. If a program knows  how large a dictionary it needs, it should create one of that  size initially. On the other hand, if a program cannot predict  how large the dictionary will eventually grow, it should choose a  small initial allocation sufficient for its immediate needs. The  built-in writable dictionaries (for example, userdict ) follow the latter  convention. 

.SH EXAMPLE
(NONE)
.SH ERRORS
.B  limitcheck(3ps)
.B  stackunderflow(3ps)
.B  typecheck(3ps)
.B  VMerror(3ps)

.SH SEE ALSO
.B  begin(3ps)
.B  end(3ps)
.B  length(3ps)
.B  maxlength(3ps)

